{"version":3,"sources":["data/ibm-fed-branches.js","context/TemperatureScaleContext.js","components/Nav/index.js","components/Nav/Nav.js","components/WeatherCard/index.js","components/WeatherCard/WeatherCard.js","hooks/useWeatherApi.js","util/weeHelpers.js","App.js","index.js"],"names":["name","coords","TemperatureScaleContext","createContext","scaleReducer","state","action","type","Error","TemperatureScaleProvider","children","useReducer","scale","dispatch","Provider","value","Nav","useContext","aria-label","href","prefix","onClick","className","WeatherCard","location","useState","refetch","setRefetch","data","setData","loading","setLoading","error","setError","useEffect","a","fetch","process","response","console","log","ok","json","fetchWeatherData","useWeatherApi","getTemperature","temp","toFixed","getTemperatureForScale","renderCard","timezone","loadingSkeleton","role","tabIndex","Tile","moment","tz","format","currently","temperature","summary","summarySplit","split","length","pop","join","formatSummary","daily","temperatureMin","temperatureMax","id","precipProbability","key","uvIndex","App","branches","map","branch","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69b7936b.chunk.js","sourcesContent":["export default [\n  {\n    name: 'Austin, TX',\n    coords: '30.4017091, -97.7151757',\n  },\n  {\n    name: 'Baton Rouge, LA',\n    coords: '30.4516853,-91.1899907',\n  },\n  {\n    name: 'Böblingen, Germany',\n    coords: '48.6658714,9.0395506',\n  },\n  {\n    name: 'Chennai, India',\n    coords: '13.08784,80.27847',\n  },\n  {\n    name: 'Dublin, Ireland',\n    coords: '53.4156307,-6.4160302',\n  },\n  {\n    name: 'Endicott, NY',\n    coords: '42.104937,-76.047724',\n  },\n  {\n    name: 'Hursley, UK',\n    coords: '51.026673,-1.398633',\n  },\n  {\n    name: 'Littleton, MA',\n    coords: '42.5485148,-71.4686236',\n  },\n  {\n    name: 'Poughkeepsie, NY',\n    coords: '41.6593453,-73.930273',\n  },\n  {\n    name: 'Raleigh, NC',\n    coords: '35.901154,-78.85835',\n  },\n  {\n    name: 'Rochester, MN',\n    coords: '44.0794929,-92.5087289',\n  },\n  {\n    name: 'San Francisco, CA',\n    coords: '37.791648,-122.3984065',\n  },\n  {\n    name: 'San Jose, CA',\n    coords: '37.1858909,-121.7574605',\n  },\n];\n","import React, { createContext, useReducer } from 'react';\n\nconst TemperatureScaleContext = createContext();\n\nfunction scaleReducer(state, action) {\n  switch (action.type) {\n    case 'C':\n      return action.type;\n    case 'F':\n      return action.type;\n    /*\n      TODO: We could extend the app by adding a dropdown\n      so that multiple temperature scales could be selected\n      such as Kelvin\n    case 'K':\n      return action.type;\n    */\n    default:\n      throw new Error();\n  }\n}\n\nconst TemperatureScaleProvider = ({ children }) => {\n  const [scale, dispatch] = useReducer(scaleReducer, 'C');\n\n  return (\n    <TemperatureScaleContext.Provider value={{ scale, dispatch }}>\n      {children}\n    </TemperatureScaleContext.Provider>\n  );\n};\n\nexport { TemperatureScaleContext };\nexport default TemperatureScaleProvider;\n","import Nav from './Nav';\n\nexport default Nav;\n","import React, { useContext } from 'react';\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderMenuItem,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n} from 'carbon-components-react/lib/components/UIShell';\nimport { TemperatureScaleContext } from '../../context/TemperatureScaleContext';\nimport Temperature16 from '@carbon/icons-react/lib/temperature/16';\n\nconst Nav = () => {\n  const { scale, dispatch } = useContext(TemperatureScaleContext);\n\n  const toggleTemperatureScale = () =>\n    dispatch({ type: scale === 'C' ? 'F' : 'C' });\n\n  return (\n    <Header aria-label=\"FED@IBM Dublin | React Hooks\">\n      <HeaderName href=\"#\" prefix=\"FED@IBM\">\n        Dublin\n      </HeaderName>\n      <HeaderNavigation aria-label=\"navigation\">\n        <HeaderMenuItem>React Hooks</HeaderMenuItem>\n      </HeaderNavigation>\n      <HeaderGlobalBar>\n        <HeaderGlobalAction\n          aria-label=\"toggle temperature scale from celsius to fahrenheit\"\n          onClick={() => toggleTemperatureScale()}>\n          <span className={`toggle-temperature-scale scale-type__${scale}`}>\n            <Temperature16 />\n            {scale}°\n          </span>\n        </HeaderGlobalAction>\n      </HeaderGlobalBar>\n    </Header>\n  );\n};\n\nexport default Nav;\n","import WeatherCard from './WeatherCard';\n\nexport default WeatherCard;\n","import React, { useState, useContext } from 'react';\nimport { Tile } from 'carbon-components-react/lib/components/Tile';\nimport Restart16 from '@carbon/icons-react/lib/restart/16';\nimport Time16 from '@carbon/icons-react/lib/time/16';\nimport Cloud32 from '@carbon/icons-react/lib/cloud/32';\nimport {\n  getLocalTimeForTimezone,\n  formatSummary,\n  getTemperatureForScale,\n} from '../../util/weeHelpers';\n\n// Import our context for temperature scale\nimport { TemperatureScaleContext } from '../../context/TemperatureScaleContext';\n// Import our useWeatherApi hook to handle fetching logic\nimport useWeatherApi from '../../hooks/useWeatherApi';\n\nconst WeatherCard = ({ location }) => {\n  // In case there's an error let's allow refetching\n  const [refetch, setRefetch] = useState(false);\n  // Grab the temperature scale context to convert F° to C° if need be\n  const { scale } = useContext(TemperatureScaleContext);\n  // Fetch weather data for this location\n  const { data, loading, error } = useWeatherApi(location, refetch);\n\n  const getTemperature = temp => {\n    return getTemperatureForScale(temp, scale);\n  };\n\n  const renderError = () => (\n    <div\n      className=\"weather-center__card--error\"\n      onClick={() => setRefetch(!refetch)}\n      role=\"button\"\n      tabIndex={0}>\n      Whoops, an error has ocurred!\n      <div className=\"error__retry\">\n        <Restart16 />\n        Retry\n      </div>\n    </div>\n  );\n\n  const renderCard = ({ loading = true, error = false }) => {\n    const loadingSkeleton = <div className=\"bx--skeleton__text\"></div>;\n    return (\n      <div className=\"bx--col-sm-4 bx--col-md-4 bx--col-lg-4 bx--col-xl-2\">\n        {!error ? (\n          <Tile className=\"weather-card-container\" tabIndex={0}>\n            <div className=\"weather-center__card\">\n              <h5 className=\"weather-center__card--title\">{location.name}</h5>\n              <div className=\"weather-center__card--currently\">\n                <div className=\"currently__time-icon-container\">\n                  <div className=\"currently__time\">\n                    <Time16 />\n                    {loading\n                      ? loadingSkeleton\n                      : getLocalTimeForTimezone(data.timezone)}\n                  </div>\n                  {loading ? (\n                    <div className=\"currently__icon\">{loadingSkeleton}</div>\n                  ) : (\n                    <div className=\"currently__icon\">\n                      <Cloud32 />\n                    </div>\n                  )}\n                </div>\n                <div\n                  className={`currently__next-hour ${\n                    loading ? 'loading' : ''\n                  }`}>\n                  <div className=\"currently__next-hour--label\">Next hour</div>\n                  <div className=\"currently__next-hour--temperature\">\n                    {loading\n                      ? loadingSkeleton\n                      : `${getTemperature(data.currently.temperature)}°`}\n                  </div>\n                  <div className=\"currently__next-hour--description\">\n                    {loading ? loadingSkeleton : data.currently.summary}\n                  </div>\n                </div>\n              </div>\n              <div className=\"weather-center__card--daily\">\n                <div>\n                  <div className=\"daily__label\">Today</div>\n                  <div className=\"daily__summary\">\n                    {/* eslint-disable-next-line no-useless-escape */}\n                    {loading\n                      ? [loadingSkeleton, loadingSkeleton]\n                      : formatSummary(data.daily.data[0].summary)}\n                  </div>\n                </div>\n                <div className=\"daily__info\">\n                  <div className=\"daily__info-group\">\n                    <div className=\"daily__info-group-item\">\n                      <div className=\"daily__info-group-item--label\">Min</div>\n                      <div className=\"daily__info-group-item--value\">\n                        {loading\n                          ? loadingSkeleton\n                          : `${getTemperature(\n                              data.daily.data[0].temperatureMin\n                            )}°`}\n                      </div>\n                    </div>\n                    <div className=\"daily__info-group-item\">\n                      <div className=\"daily__info-group-item--label\">Max</div>\n                      <div className=\"daily__info-group-item--value\">\n                        {loading\n                          ? loadingSkeleton\n                          : `${getTemperature(\n                              data.daily.data[0].temperatureMax\n                            )}°`}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"daily__info-group\">\n                    <div className=\"daily__info-group-item\">\n                      <div className=\"daily__info-group-item--label\">Prec.</div>\n                      <div\n                        className=\"daily__info-group-item--value\"\n                        id=\"precipitation\">\n                        {loading\n                          ? loadingSkeleton\n                          : [\n                              data.daily.data[0].precipProbability.toFixed(0),\n                              <span key=\"%\" className=\"small-percentage-symbol\">\n                                %\n                              </span>,\n                            ]}\n                      </div>\n                    </div>\n                    <div className=\"daily__info-group-item\">\n                      <div className=\"daily__info-group-item--label\">UV</div>\n                      <div className=\"daily__info-group-item--value\">\n                        {loading\n                          ? loadingSkeleton\n                          : data.daily.data[0].uvIndex.toFixed(0)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Tile>\n        ) : (\n          renderError()\n        )}\n      </div>\n    );\n  };\n\n  if (loading) return renderCard({ loading: true });\n\n  if (error) return renderCard({ error: true });\n\n  return renderCard({ loading: false });\n};\n\nexport default WeatherCard;\n","// NOTE: We don't need to import React from 'react', only { ...hooks }\nimport { useState, useEffect } from 'react';\n\nexport default ({ coords }, refetch) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      setLoading(true);\n      setError(false);\n\n      try {\n        const response = await fetch(\n          `${process.env.REACT_APP_API_PROXY}https://api.darksky.net/forecast/db1d17eb3b798d4881121dee107183cc/${coords}`\n        );\n        console.log('response: ', response);\n        if (response.ok) {\n          const data = await response.json();\n          setData(data);\n        } else {\n          setError(true);\n        }\n      } catch (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n    fetchWeatherData();\n  }, [coords, refetch]);\n\n  return { data, loading, error };\n};\n","import moment from 'moment-timezone';\n\n/**\n * A wee function for grabbing the local time for a given timezone\n * @param {String} timezone - an tz database timezone - See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n * @returns {String} time in HH:mm format - E.g. 14:30\n */\nexport const getLocalTimeForTimezone = timezone => {\n  return moment()\n    .tz(timezone)\n    .format('HH:mm');\n};\n\n/**\n * A wee function for removing the full stop at the end of weather summary\n * cause I couldn't get .trimRight() to work properly :\\\n * So instead of: 'Humid and partly cloudy throughout the day.'\n * we get:        'Humid and partly cloudy throughout the day'\n * @param {String} summary\n * @returns {String}\n */\nexport const formatSummary = summary => {\n  const summarySplit = summary.split('.');\n\n  if (summarySplit[summarySplit.length - 1].length === 0) {\n    summarySplit.pop();\n  }\n  return summarySplit.join();\n};\n\n/**\n * A wee function for converting the temperature returned from\n * the api into whatever the global temperature scale is at that time\n * e.g. celcius (C) / fahrenheit (F)\n * NOTE: the temperature is returned as fahrenheit by default so no need to\n * convert if F is the global scale\n * @param {number} value\n * @param {number} scale\n * @returns {number}\n */\nexport const getTemperatureForScale = (value, scale) => {\n  console.log('scale: ', scale);\n  switch (scale) {\n    case 'C':\n      return (((value - 32) * 5) / 9).toFixed(0);\n    case 'F':\n      return value.toFixed(0);\n    /* TODO: We could add a dropdown to select other scales in the future, e.g.\n      case 'kelvin':\n        return ...;\n    */\n    default:\n      throw Error(`temperature scale ${scale} is not recognized`);\n  }\n};\n","import React from 'react';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport branches from './data/ibm-fed-branches';\nimport TemperatureScaleProvider from './context/TemperatureScaleContext';\nimport Nav from './components/Nav';\nimport WeatherCard from './components/WeatherCard';\n\nconst App = () => {\n  return (\n    <div className=\"app theme--g90\">\n      <TemperatureScaleProvider>\n        <Nav />\n        <Content>\n          <div className=\"bx--grid bx--grid--no-gutter\">\n            <div className=\"bx--row\">\n              <h1 className=\"bx--col-sm-4 bx--col-md-8 bx--col-lg-16\">\n                FED@IBM Weather Center\n              </h1>\n            </div>\n            <div className=\"bx--row\">\n              {branches.map((branch, index) => (\n                <WeatherCard key={branch.name} location={branch} />\n              ))}\n            </div>\n          </div>\n        </Content>\n      </TemperatureScaleProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}